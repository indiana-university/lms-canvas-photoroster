<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>photoroster</artifactId>
    <packaging>jar</packaging>
    <name>photoroster</name>
    <version>4.0.1</version>

    <parent>
        <artifactId>lms2Wow</artifactId>
        <groupId>edu.iu.uits.lms</groupId>
        <version>4.0.11</version>
        <relativePath />
    </parent>

    <properties>
        <app.version>${project.version}</app.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.8.0</commons-io.version>
        <commons-lang3.version>3.11</commons-lang3.version>
        <docker_repository_name>photoroster</docker_repository_name>
        <docker_tag>stable</docker_tag>
        <helm_service_name>photoroster</helm_service_name>
        <javax.ws.rs-api.version>2.1.1</javax.ws.rs-api.version>
        <jquery.version>3.5.1</jquery.version>
        <lms-bom.version>4.0.7</lms-bom.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>edu.iu.uits.lms</groupId>
                <artifactId>lms-bom</artifactId>
                <version>${lms-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-lti-web</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-canvas-client</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-iuonly-client</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>common-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-rivet</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>redis-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>
    </dependencies>


    <build>
        <finalName>photoroster</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>js-install-node-and-npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>js-process</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>
                        <execution>
                            <id>js-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <configuration>
                                <arguments>test</arguments>
                            </configuration>
                        </execution>
                    <execution>
                        <id>js-package</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>webpack</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <repository>localhost:5000/${docker_repository_name}</repository>
                </configuration>
                <executions>
                    <execution>
                        <id>build-latest</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <tag>unstable</tag>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>de.jpdigital</groupId>
                <artifactId>hibernate54-ddl-maven-plugin</artifactId>
                <configuration>
                    <dialects>
                        <param>h2</param>
                        <param>postgresql9</param>
                    </dialects>
                    <packages>
                        <param>edu.iu.uits.lms.photoroster</param>
                    </packages>
<!--                    <persistenceXml>src/main/webapp/META-INF/canvasnotifier-persistence.xml</persistenceXml>-->
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>${project.build.directory}/impl-resources</directory>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>docker-push</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <configuration>
                            <repository>${docker_repository_base}${docker_repository_name}</repository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-latest</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>${docker_tag}</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-version</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>helm-deploy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
